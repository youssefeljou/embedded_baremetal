/*
 * motor.c
 *
 *  Created on: Oct 8, 2022
 *      Author: Youmna
 */
#include "motor.h"
#include "common_macros.h" /* To use the macros like SET_BIT */
#include <avr/io.h> /* To use ICU/Timer1 Registers */
#include <avr/interrupt.h> /* For ICU ISR */

void PWM_Timer0_Init(unsigned char set_duty_cycle)
{


	TCNT0 = 0; //Set Timer Initial value

	OCR0  = set_duty_cycle; // Set Compare Value

	DDRB  = DDRB | (1<<PB3); //set PB3/OC0 as output pin --> pin where the PWM signal is generated from MC.

	/* Configure timer control register
	 * 1. Fast PWM mode FOC0=0
	 * 2. Fast PWM Mode WGM01=1 & WGM00=1
	 * 3. Clear OC0 when match occurs (non inverted mode) COM00=0 & COM01=1
	 * 4. clock = F_CPU/8 CS00=0 CS01=1 CS02=0
	 */
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS01);
}
void speed(unsigned char speed)
{
	/* generate duty cycle 50% to get half motor speed */
	PWM_Timer0_Init(speed*256/100);

	/* configure pin PA0, PA1 and PA2 as input pins */
	DDRA &= 0xF8;

	/* configure pin PC0 and PC1 as output pins */
	DDRC |= 0x03;

	/* Motor is stop at the beginning */
	PORTC &= 0xFC;

}
void changeSpeed(unsigned char temper)
{
speed(temper*100/120);

}



